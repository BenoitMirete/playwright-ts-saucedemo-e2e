name: Playwright Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        platform: [ubuntu-latest, windows-latest, macos-latest]
        exclude:
          - browser: firefox
            platform: macos-latest
          - browser: webkit
            platform: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/playwright
          key: playwright-${{ matrix.browser }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            playwright-${{ matrix.browser }}-
            playwright-

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run Playwright tests
        run: pnpm exec playwright test --project=${{ matrix.browser }}
        env:
          CI: true

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}-${{ matrix.platform }}
          path: playwright-report/
          retention-days: 30

      - name: Upload test results (raw)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.browser }}-${{ matrix.platform }}
          path: test-results/
          retention-days: 30

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint:check

      - name: Check Prettier formatting
        run: pnpm run format:check

  mobile-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [Mobile Chrome, Mobile Safari]

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.17.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        id: playwright-cache-mobile
        with:
          path: |
            ~/.cache/ms-playwright
            ~/.cache/playwright
          key: playwright-mobile-${{ matrix.browser }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            playwright-mobile-${{ matrix.browser }}-
            playwright-mobile-
            playwright-

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
        if: steps.playwright-cache-mobile.outputs.cache-hit != 'true'

      - name: Run Mobile Playwright tests
        run: pnpm exec playwright test --project="${{ matrix.browser }}"
        env:
          CI: true

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

  test-report:
    needs: [test, mobile-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: all-results

      - name: Merge test results
        run: |
          mkdir -p merged-results
          find all-results -name "*.json" -exec cp {} merged-results/ \;

      - name: Upload merged results
        uses: actions/upload-artifact@v4
        with:
          name: merged-test-results
          path: merged-results/
          retention-days: 30
